state 23 contains 1 shift/reduce conflicts
state 26 contains 9 shift/reduce conflicts
state 100 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 program: external_declaration
rule 2 program: program external_declaration
rule 3 external_declaration: declaration
rule 4 external_declaration: function_definition
rule 5 declaration: RESERVED declarator_list ";"
rule 6 declarator_list: declarator
rule 7 declarator_list: declarator_list "," declarator
rule 8 declarator: IDENTIFIER
rule 9 function_definition: RESERVED declarator "(" parameter_type_list ")" compound_statement
rule 10 parameter_type_list: parameter_declaration
rule 11 parameter_type_list: parameter_type_list "," parameter_declaration
rule 12 parameter_type_list: 
rule 13 parameter_declaration: RESERVED declarator
rule 14 statement: ";"
rule 15 statement: expression ";"
rule 16 statement: compound_statement
rule 17 statement: "if" "(" expression ")" statement
rule 18 statement: "if" "(" expression ")" statement "else" statement
rule 19 statement: "while" "(" expression ")" statement
rule 20 statement: "return" expression ";"
rule 21 compound_statement: "{" declaration_list statement_list "}"
rule 22 declaration_list: declaration
rule 23 declaration_list: declaration_list declaration
rule 24 declaration_list: 
rule 25 statement_list: statement
rule 26 statement_list: statement_list statement
rule 27 statement_list: 
rule 28 expression: assign_expr
rule 29 expression: expression "," assign_expr
rule 30 assign_expr: logical_or_expr
rule 31 assign_expr: IDENTIFIER "=" assign_expr
rule 32 logical_or_expr: logical_and_expr
rule 33 logical_or_expr: logical_or_expr "||" logical_and_expr
rule 34 logical_and_expr: equality_expr
rule 35 logical_and_expr: logical_and_expr "&&" equality_expr
rule 36 equality_expr: relational_expr
rule 37 equality_expr: equality_expr "==" relational_expr
rule 38 equality_expr: equality_expr "!=" relational_expr
rule 39 relational_expr: add_expr
rule 40 relational_expr: relational_expr "<" add_expr
rule 41 relational_expr: relational_expr ">" add_expr
rule 42 relational_expr: relational_expr "<=" add_expr
rule 43 relational_expr: relational_expr ">=" add_expr
rule 44 add_expr: mult_expr
rule 45 add_expr: add_expr "+" mult_expr
rule 46 add_expr: add_expr "-" mult_expr
rule 47 mult_expr: unary_expr
rule 48 mult_expr: mult_expr "*" unary_expr
rule 49 mult_expr: mult_expr "/" unary_expr
rule 50 unary_expr: postfix_expr
rule 51 unary_expr: "-" unary_expr
rule 52 postfix_expr: primary_expr
rule 53 postfix_expr: IDENTIFIER "(" argument_expression_list ")"
rule 54 primary_expr: IDENTIFIER
rule 55 primary_expr: CONSTANT
rule 56 primary_expr: "(" expression ")"
rule 57 argument_expression_list: assign_expr
rule 58 argument_expression_list: argument_expression_list "," assign_expr
rule 59 argument_expression_list: 

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (31)
    on right: 
    on left : 
  program (32)
    on right: 2
    on left : 1 2
  external_declaration (33)
    on right: 1 2
    on left : 3 4
  declaration (34)
    on right: 3 22 23
    on left : 5
  function_definition (35)
    on right: 4
    on left : 9
  declarator_list (36)
    on right: 5 7
    on left : 6 7
  declarator (37)
    on right: 6 7 9 13
    on left : 8
  parameter_type_list (38)
    on right: 9 11
    on left : 10 11 12
  compound_statement (39)
    on right: 9 16
    on left : 21
  parameter_declaration (40)
    on right: 10 11
    on left : 13
  statement (41)
    on right: 17 18 19 25 26
    on left : 14 15 16 17 18 19 20
  expression (42)
    on right: 15 17 18 19 20 29 56
    on left : 28 29
  declaration_list (43)
    on right: 21 23
    on left : 22 23 24
  statement_list (44)
    on right: 21 26
    on left : 25 26 27
  assign_expr (45)
    on right: 28 29 31 57 58
    on left : 30 31
  logical_or_expr (46)
    on right: 30 33
    on left : 32 33
  logical_and_expr (47)
    on right: 32 33 35
    on left : 34 35
  equality_expr (48)
    on right: 34 35 37 38
    on left : 36 37 38
  relational_expr (49)
    on right: 36 37 38 40 41 42 43
    on left : 39 40 41 42 43
  add_expr (50)
    on right: 39 40 41 42 43 45 46
    on left : 44 45 46
  mult_expr (51)
    on right: 44 45 46 48 49
    on left : 47 48 49
  unary_expr (52)
    on right: 47 48 49 51
    on left : 50 51
  postfix_expr (53)
    on right: 50
    on left : 52 53
  primary_expr (54)
    on right: 52
    on left : 54 55 56
  argument_expression_list (55)
    on right: 53 58
    on left : 57 58 59

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  "*" (2) 48
  "/" (3) 49
  "%" (4) 
  "+" (5) 45
  "-" (6) 46 51
  "<" (7) 40
  ">" (8) 41
  "<=" (9) 42
  ">=" (10) 43
  "==" (11) 37
  "!=" (12) 38
  "&" (13) 
  "|" (14) 
  "&&" (15) 35
  "||" (16) 33
  ")" (17) 9 17 18 19 53 56
  "}" (18) 21
  "(" (19) 9 17 18 19 53 56
  "{" (20) 21
  RESERVED (21) 5 9 13
  ";" (22) 5 14 15 20
  "," (23) 7 11 29 58
  IDENTIFIER (24) 8 31 53 54
  "if" (25) 17 18
  "else" (26) 18
  "while" (27) 19
  "return" (28) 20
  "=" (29) 31
  CONSTANT (30) 55

--------- State ---------

state 0


  RESERVED      shift, and go to state 5

  program       go to state 1
  external_declaration  go to state 2
  declaration   go to state 3
  function_definition  go to state 4

state 1

   2) program : program _ external_declaration

  $end          shift, and go to state 6
  RESERVED      shift, and go to state 5

  external_declaration  go to state 7
  declaration   go to state 3
  function_definition  go to state 4

state 2

   1) program : external_declaration _

  $default      reduce using rule 1 (program)


state 3

   3) external_declaration : declaration _

  $default      reduce using rule 3 (external_declaration)


state 4

   4) external_declaration : function_definition _

  $default      reduce using rule 4 (external_declaration)


state 5

   5) declaration : RESERVED _ declarator_list ";"
   9) function_definition : RESERVED _ declarator "(" parameter_type_list ")" compound_statement

  IDENTIFIER    shift, and go to state 10

  declarator_list  go to state 8
  declarator    go to state 9

state 6


  $end          shift, and go to state 11


state 7

   2) program : program external_declaration _

  $default      reduce using rule 2 (program)


state 8

   5) declaration : RESERVED declarator_list _ ";"
   7) declarator_list : declarator_list _ "," declarator

  ";"           shift, and go to state 12
  ","           shift, and go to state 13


state 9

   6) declarator_list : declarator _
   9) function_definition : RESERVED declarator _ "(" parameter_type_list ")" compound_statement

  "("           shift, and go to state 14
  $default      reduce using rule 6 (declarator_list)


state 10

   8) declarator : IDENTIFIER _

  $default      reduce using rule 8 (declarator)


state 11


  $default      accept


state 12

   5) declaration : RESERVED declarator_list ";" _

  $default      reduce using rule 5 (declaration)


state 13

   7) declarator_list : declarator_list "," _ declarator

  IDENTIFIER    shift, and go to state 10

  declarator    go to state 15

state 14

   9) function_definition : RESERVED declarator "(" _ parameter_type_list ")" compound_statement

  RESERVED      shift, and go to state 18
  $default      reduce using rule 12 (parameter_type_list)

  parameter_type_list  go to state 16
  parameter_declaration  go to state 17

state 15

   7) declarator_list : declarator_list "," declarator _

  $default      reduce using rule 7 (declarator_list)


state 16

   9) function_definition : RESERVED declarator "(" parameter_type_list _ ")" compound_statement
  11) parameter_type_list : parameter_type_list _ "," parameter_declaration

  ")"           shift, and go to state 19
  ","           shift, and go to state 20


state 17

  10) parameter_type_list : parameter_declaration _

  $default      reduce using rule 10 (parameter_type_list)


state 18

  13) parameter_declaration : RESERVED _ declarator

  IDENTIFIER    shift, and go to state 10

  declarator    go to state 21

state 19

   9) function_definition : RESERVED declarator "(" parameter_type_list ")" _ compound_statement

  "{"           shift, and go to state 23

  compound_statement  go to state 22

state 20

  11) parameter_type_list : parameter_type_list "," _ parameter_declaration

  RESERVED      shift, and go to state 18

  parameter_declaration  go to state 24

state 21

  13) parameter_declaration : RESERVED declarator _

  $default      reduce using rule 13 (parameter_declaration)


state 22

   9) function_definition : RESERVED declarator "(" parameter_type_list ")" compound_statement _

  $default      reduce using rule 9 (function_definition)


state 23

  21) compound_statement : "{" _ declaration_list statement_list "}"

  RESERVED      shift, and go to state 25
  RESERVED      [reduce using rule 24 (declaration_list)]
  $default      reduce using rule 24 (declaration_list)

  declaration_list  go to state 26
  declaration   go to state 27

state 24

  11) parameter_type_list : parameter_type_list "," parameter_declaration _

  $default      reduce using rule 11 (parameter_type_list)


state 25

   5) declaration : RESERVED _ declarator_list ";"

  IDENTIFIER    shift, and go to state 10

  declarator_list  go to state 8
  declarator    go to state 28

state 26

  21) compound_statement : "{" declaration_list _ statement_list "}"
  23) declaration_list : declaration_list _ declaration

  "-"           shift, and go to state 48
  "-"           [reduce using rule 27 (statement_list)]
  "("           shift, and go to state 51
  "("           [reduce using rule 27 (statement_list)]
  "{"           shift, and go to state 23
  "{"           [reduce using rule 27 (statement_list)]
  RESERVED      shift, and go to state 25
  ";"           shift, and go to state 29
  ";"           [reduce using rule 27 (statement_list)]
  IDENTIFIER    shift, and go to state 40
  IDENTIFIER    [reduce using rule 27 (statement_list)]
  "if"          shift, and go to state 32
  "if"          [reduce using rule 27 (statement_list)]
  "while"       shift, and go to state 33
  "while"       [reduce using rule 27 (statement_list)]
  "return"      shift, and go to state 34
  "return"      [reduce using rule 27 (statement_list)]
  CONSTANT      shift, and go to state 50
  CONSTANT      [reduce using rule 27 (statement_list)]
  $default      reduce using rule 27 (statement_list)

  expression    go to state 30
  compound_statement  go to state 31
  statement_list  go to state 35
  declaration   go to state 36
  statement     go to state 37
  assign_expr   go to state 38
  logical_or_expr  go to state 39
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 27

  22) declaration_list : declaration _

  $default      reduce using rule 22 (declaration_list)


state 28

   6) declarator_list : declarator _

  $default      reduce using rule 6 (declarator_list)


state 29

  14) statement : ";" _

  $default      reduce using rule 14 (statement)


state 30

  15) statement : expression _ ";"
  29) expression : expression _ "," assign_expr

  ";"           shift, and go to state 52
  ","           shift, and go to state 53


state 31

  16) statement : compound_statement _

  $default      reduce using rule 16 (statement)


state 32

  17) statement : "if" _ "(" expression ")" statement
  18) statement : "if" _ "(" expression ")" statement "else" statement

  "("           shift, and go to state 54


state 33

  19) statement : "while" _ "(" expression ")" statement

  "("           shift, and go to state 55


state 34

  20) statement : "return" _ expression ";"

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 40
  CONSTANT      shift, and go to state 50

  expression    go to state 56
  assign_expr   go to state 38
  logical_or_expr  go to state 39
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 35

  21) compound_statement : "{" declaration_list statement_list _ "}"
  26) statement_list : statement_list _ statement

  "-"           shift, and go to state 48
  "}"           shift, and go to state 57
  "("           shift, and go to state 51
  "{"           shift, and go to state 23
  ";"           shift, and go to state 29
  IDENTIFIER    shift, and go to state 40
  "if"          shift, and go to state 32
  "while"       shift, and go to state 33
  "return"      shift, and go to state 34
  CONSTANT      shift, and go to state 50

  expression    go to state 30
  compound_statement  go to state 31
  statement     go to state 58
  assign_expr   go to state 38
  logical_or_expr  go to state 39
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 36

  23) declaration_list : declaration_list declaration _

  $default      reduce using rule 23 (declaration_list)


state 37

  25) statement_list : statement _

  $default      reduce using rule 25 (statement_list)


state 38

  28) expression : assign_expr _

  $default      reduce using rule 28 (expression)


state 39

  30) assign_expr : logical_or_expr _
  33) logical_or_expr : logical_or_expr _ "||" logical_and_expr

  "||"          shift, and go to state 59
  $default      reduce using rule 30 (assign_expr)


state 40

  31) assign_expr : IDENTIFIER _ "=" assign_expr
  53) postfix_expr : IDENTIFIER _ "(" argument_expression_list ")"
  54) primary_expr : IDENTIFIER _

  "("           shift, and go to state 61
  "="           shift, and go to state 60
  $default      reduce using rule 54 (primary_expr)


state 41

  32) logical_or_expr : logical_and_expr _
  35) logical_and_expr : logical_and_expr _ "&&" equality_expr

  "&&"          shift, and go to state 62
  $default      reduce using rule 32 (logical_or_expr)


state 42

  34) logical_and_expr : equality_expr _
  37) equality_expr : equality_expr _ "==" relational_expr
  38) equality_expr : equality_expr _ "!=" relational_expr

  "=="          shift, and go to state 63
  "!="          shift, and go to state 64
  $default      reduce using rule 34 (logical_and_expr)


state 43

  36) equality_expr : relational_expr _
  40) relational_expr : relational_expr _ "<" add_expr
  41) relational_expr : relational_expr _ ">" add_expr
  42) relational_expr : relational_expr _ "<=" add_expr
  43) relational_expr : relational_expr _ ">=" add_expr

  "<"           shift, and go to state 65
  ">"           shift, and go to state 66
  "<="          shift, and go to state 67
  ">="          shift, and go to state 68
  $default      reduce using rule 36 (equality_expr)


state 44

  39) relational_expr : add_expr _
  45) add_expr : add_expr _ "+" mult_expr
  46) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 69
  "-"           shift, and go to state 70
  $default      reduce using rule 39 (relational_expr)


state 45

  44) add_expr : mult_expr _
  48) mult_expr : mult_expr _ "*" unary_expr
  49) mult_expr : mult_expr _ "/" unary_expr

  "*"           shift, and go to state 71
  "/"           shift, and go to state 72
  $default      reduce using rule 44 (add_expr)


state 46

  47) mult_expr : unary_expr _

  $default      reduce using rule 47 (mult_expr)


state 47

  50) unary_expr : postfix_expr _

  $default      reduce using rule 50 (unary_expr)


state 48

  51) unary_expr : "-" _ unary_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  postfix_expr  go to state 47
  unary_expr    go to state 73
  primary_expr  go to state 49

state 49

  52) postfix_expr : primary_expr _

  $default      reduce using rule 52 (postfix_expr)


state 50

  55) primary_expr : CONSTANT _

  $default      reduce using rule 55 (primary_expr)


state 51

  56) primary_expr : "(" _ expression ")"

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 40
  CONSTANT      shift, and go to state 50

  assign_expr   go to state 38
  expression    go to state 75
  logical_or_expr  go to state 39
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 52

  15) statement : expression ";" _

  $default      reduce using rule 15 (statement)


state 53

  29) expression : expression "," _ assign_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 40
  CONSTANT      shift, and go to state 50

  assign_expr   go to state 76
  logical_or_expr  go to state 39
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 54

  17) statement : "if" "(" _ expression ")" statement
  18) statement : "if" "(" _ expression ")" statement "else" statement

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 40
  CONSTANT      shift, and go to state 50

  expression    go to state 77
  assign_expr   go to state 38
  logical_or_expr  go to state 39
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 55

  19) statement : "while" "(" _ expression ")" statement

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 40
  CONSTANT      shift, and go to state 50

  expression    go to state 78
  assign_expr   go to state 38
  logical_or_expr  go to state 39
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 56

  20) statement : "return" expression _ ";"
  29) expression : expression _ "," assign_expr

  ";"           shift, and go to state 79
  ","           shift, and go to state 53


state 57

  21) compound_statement : "{" declaration_list statement_list "}" _

  $default      reduce using rule 21 (compound_statement)


state 58

  26) statement_list : statement_list statement _

  $default      reduce using rule 26 (statement_list)


state 59

  33) logical_or_expr : logical_or_expr "||" _ logical_and_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  logical_and_expr  go to state 80
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 60

  31) assign_expr : IDENTIFIER "=" _ assign_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 40
  CONSTANT      shift, and go to state 50

  logical_or_expr  go to state 39
  assign_expr   go to state 81
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 61

  53) postfix_expr : IDENTIFIER "(" _ argument_expression_list ")"

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 40
  CONSTANT      shift, and go to state 50
  $default      reduce using rule 59 (argument_expression_list)

  logical_or_expr  go to state 39
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49
  argument_expression_list  go to state 82
  assign_expr   go to state 83

state 62

  35) logical_and_expr : logical_and_expr "&&" _ equality_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  equality_expr  go to state 84
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 63

  37) equality_expr : equality_expr "==" _ relational_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  relational_expr  go to state 85
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 64

  38) equality_expr : equality_expr "!=" _ relational_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  relational_expr  go to state 86
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 65

  40) relational_expr : relational_expr "<" _ add_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  add_expr      go to state 87
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 66

  41) relational_expr : relational_expr ">" _ add_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  add_expr      go to state 88
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 67

  42) relational_expr : relational_expr "<=" _ add_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  add_expr      go to state 89
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 68

  43) relational_expr : relational_expr ">=" _ add_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  add_expr      go to state 90
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 69

  45) add_expr : add_expr "+" _ mult_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  mult_expr     go to state 91
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 70

  46) add_expr : add_expr "-" _ mult_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  mult_expr     go to state 92
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 71

  48) mult_expr : mult_expr "*" _ unary_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  unary_expr    go to state 93
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 72

  49) mult_expr : mult_expr "/" _ unary_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 74
  CONSTANT      shift, and go to state 50

  unary_expr    go to state 94
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 73

  51) unary_expr : "-" unary_expr _

  $default      reduce using rule 51 (unary_expr)


state 74

  53) postfix_expr : IDENTIFIER _ "(" argument_expression_list ")"
  54) primary_expr : IDENTIFIER _

  "("           shift, and go to state 61
  $default      reduce using rule 54 (primary_expr)


state 75

  29) expression : expression _ "," assign_expr
  56) primary_expr : "(" expression _ ")"

  ")"           shift, and go to state 95
  ","           shift, and go to state 53


state 76

  29) expression : expression "," assign_expr _

  $default      reduce using rule 29 (expression)


state 77

  17) statement : "if" "(" expression _ ")" statement
  18) statement : "if" "(" expression _ ")" statement "else" statement
  29) expression : expression _ "," assign_expr

  ")"           shift, and go to state 96
  ","           shift, and go to state 53


state 78

  19) statement : "while" "(" expression _ ")" statement
  29) expression : expression _ "," assign_expr

  ")"           shift, and go to state 97
  ","           shift, and go to state 53


state 79

  20) statement : "return" expression ";" _

  $default      reduce using rule 20 (statement)


state 80

  33) logical_or_expr : logical_or_expr "||" logical_and_expr _
  35) logical_and_expr : logical_and_expr _ "&&" equality_expr

  "&&"          shift, and go to state 62
  $default      reduce using rule 33 (logical_or_expr)


state 81

  31) assign_expr : IDENTIFIER "=" assign_expr _

  $default      reduce using rule 31 (assign_expr)


state 82

  53) postfix_expr : IDENTIFIER "(" argument_expression_list _ ")"
  58) argument_expression_list : argument_expression_list _ "," assign_expr

  ")"           shift, and go to state 98
  ","           shift, and go to state 99


state 83

  57) argument_expression_list : assign_expr _

  $default      reduce using rule 57 (argument_expression_list)


state 84

  35) logical_and_expr : logical_and_expr "&&" equality_expr _
  37) equality_expr : equality_expr _ "==" relational_expr
  38) equality_expr : equality_expr _ "!=" relational_expr

  "=="          shift, and go to state 63
  "!="          shift, and go to state 64
  $default      reduce using rule 35 (logical_and_expr)


state 85

  37) equality_expr : equality_expr "==" relational_expr _
  40) relational_expr : relational_expr _ "<" add_expr
  41) relational_expr : relational_expr _ ">" add_expr
  42) relational_expr : relational_expr _ "<=" add_expr
  43) relational_expr : relational_expr _ ">=" add_expr

  "<"           shift, and go to state 65
  ">"           shift, and go to state 66
  "<="          shift, and go to state 67
  ">="          shift, and go to state 68
  $default      reduce using rule 37 (equality_expr)


state 86

  38) equality_expr : equality_expr "!=" relational_expr _
  40) relational_expr : relational_expr _ "<" add_expr
  41) relational_expr : relational_expr _ ">" add_expr
  42) relational_expr : relational_expr _ "<=" add_expr
  43) relational_expr : relational_expr _ ">=" add_expr

  "<"           shift, and go to state 65
  ">"           shift, and go to state 66
  "<="          shift, and go to state 67
  ">="          shift, and go to state 68
  $default      reduce using rule 38 (equality_expr)


state 87

  40) relational_expr : relational_expr "<" add_expr _
  45) add_expr : add_expr _ "+" mult_expr
  46) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 69
  "-"           shift, and go to state 70
  $default      reduce using rule 40 (relational_expr)


state 88

  41) relational_expr : relational_expr ">" add_expr _
  45) add_expr : add_expr _ "+" mult_expr
  46) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 69
  "-"           shift, and go to state 70
  $default      reduce using rule 41 (relational_expr)


state 89

  42) relational_expr : relational_expr "<=" add_expr _
  45) add_expr : add_expr _ "+" mult_expr
  46) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 69
  "-"           shift, and go to state 70
  $default      reduce using rule 42 (relational_expr)


state 90

  43) relational_expr : relational_expr ">=" add_expr _
  45) add_expr : add_expr _ "+" mult_expr
  46) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 69
  "-"           shift, and go to state 70
  $default      reduce using rule 43 (relational_expr)


state 91

  45) add_expr : add_expr "+" mult_expr _
  48) mult_expr : mult_expr _ "*" unary_expr
  49) mult_expr : mult_expr _ "/" unary_expr

  "*"           shift, and go to state 71
  "/"           shift, and go to state 72
  $default      reduce using rule 45 (add_expr)


state 92

  46) add_expr : add_expr "-" mult_expr _
  48) mult_expr : mult_expr _ "*" unary_expr
  49) mult_expr : mult_expr _ "/" unary_expr

  "*"           shift, and go to state 71
  "/"           shift, and go to state 72
  $default      reduce using rule 46 (add_expr)


state 93

  48) mult_expr : mult_expr "*" unary_expr _

  $default      reduce using rule 48 (mult_expr)


state 94

  49) mult_expr : mult_expr "/" unary_expr _

  $default      reduce using rule 49 (mult_expr)


state 95

  56) primary_expr : "(" expression ")" _

  $default      reduce using rule 56 (primary_expr)


state 96

  17) statement : "if" "(" expression ")" _ statement
  18) statement : "if" "(" expression ")" _ statement "else" statement

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  "{"           shift, and go to state 23
  ";"           shift, and go to state 29
  IDENTIFIER    shift, and go to state 40
  "if"          shift, and go to state 32
  "while"       shift, and go to state 33
  "return"      shift, and go to state 34
  CONSTANT      shift, and go to state 50

  expression    go to state 30
  compound_statement  go to state 31
  statement     go to state 100
  assign_expr   go to state 38
  logical_or_expr  go to state 39
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 97

  19) statement : "while" "(" expression ")" _ statement

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  "{"           shift, and go to state 23
  ";"           shift, and go to state 29
  IDENTIFIER    shift, and go to state 40
  "if"          shift, and go to state 32
  "while"       shift, and go to state 33
  "return"      shift, and go to state 34
  CONSTANT      shift, and go to state 50

  expression    go to state 30
  compound_statement  go to state 31
  statement     go to state 101
  assign_expr   go to state 38
  logical_or_expr  go to state 39
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 98

  53) postfix_expr : IDENTIFIER "(" argument_expression_list ")" _

  $default      reduce using rule 53 (postfix_expr)


state 99

  58) argument_expression_list : argument_expression_list "," _ assign_expr

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  IDENTIFIER    shift, and go to state 40
  CONSTANT      shift, and go to state 50

  logical_or_expr  go to state 39
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49
  assign_expr   go to state 102

state 100

  17) statement : "if" "(" expression ")" statement _
  18) statement : "if" "(" expression ")" statement _ "else" statement

  "else"        shift, and go to state 103
  "else"        [reduce using rule 17 (statement)]
  $default      reduce using rule 17 (statement)


state 101

  19) statement : "while" "(" expression ")" statement _

  $default      reduce using rule 19 (statement)


state 102

  58) argument_expression_list : argument_expression_list "," assign_expr _

  $default      reduce using rule 58 (argument_expression_list)


state 103

  18) statement : "if" "(" expression ")" statement "else" _ statement

  "-"           shift, and go to state 48
  "("           shift, and go to state 51
  "{"           shift, and go to state 23
  ";"           shift, and go to state 29
  IDENTIFIER    shift, and go to state 40
  "if"          shift, and go to state 32
  "while"       shift, and go to state 33
  "return"      shift, and go to state 34
  CONSTANT      shift, and go to state 50

  expression    go to state 30
  compound_statement  go to state 31
  statement     go to state 104
  assign_expr   go to state 38
  logical_or_expr  go to state 39
  logical_and_expr  go to state 41
  equality_expr  go to state 42
  relational_expr  go to state 43
  add_expr      go to state 44
  mult_expr     go to state 45
  unary_expr    go to state 46
  postfix_expr  go to state 47
  primary_expr  go to state 49

state 104

  18) statement : "if" "(" expression ")" statement "else" statement _

  $default      reduce using rule 18 (statement)

