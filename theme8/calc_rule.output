state 27 contains 1 shift/reduce conflicts
state 29 contains 9 shift/reduce conflicts
state 104 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 program: external_declaration
rule 2 program: program external_declaration
rule 3 external_declaration: declaration
rule 4 external_declaration: function_definition
rule 5 declaration: RESERVED declarator_list ";"
rule 6 declarator_list: declarator
rule 7 declarator_list: declarator_list "," declarator
rule 8 declarator: IDENTIFIER
rule 9 @1: 
rule 10 @2: 
rule 11 function_definition: RESERVED declarator "(" @1 parameter_type_list ")" compound_statement @2
rule 12 parameter_type_list: parameter_declaration
rule 13 parameter_type_list: parameter_type_list "," parameter_declaration
rule 14 parameter_type_list: 
rule 15 parameter_declaration: RESERVED declarator
rule 16 statement: ";"
rule 17 statement: expression ";"
rule 18 statement: compound_statement
rule 19 statement: "if" "(" expression ")" statement
rule 20 statement: "if" "(" expression ")" statement "else" statement
rule 21 statement: "while" "(" expression ")" statement
rule 22 statement: "return" expression ";"
rule 23 @3: 
rule 24 @4: 
rule 25 compound_statement: "{" @3 declaration_list statement_list "}" @4
rule 26 declaration_list: declaration
rule 27 declaration_list: declaration_list declaration
rule 28 declaration_list: 
rule 29 statement_list: statement
rule 30 statement_list: statement_list statement
rule 31 statement_list: 
rule 32 expression: assign_expr
rule 33 expression: expression "," assign_expr
rule 34 assign_expr: logical_or_expr
rule 35 assign_expr: IDENTIFIER "=" assign_expr
rule 36 logical_or_expr: logical_and_expr
rule 37 logical_or_expr: logical_or_expr "||" logical_and_expr
rule 38 logical_and_expr: equality_expr
rule 39 logical_and_expr: logical_and_expr "&&" equality_expr
rule 40 equality_expr: relational_expr
rule 41 equality_expr: equality_expr "==" relational_expr
rule 42 equality_expr: equality_expr "!=" relational_expr
rule 43 relational_expr: add_expr
rule 44 relational_expr: relational_expr "<" add_expr
rule 45 relational_expr: relational_expr ">" add_expr
rule 46 relational_expr: relational_expr "<=" add_expr
rule 47 relational_expr: relational_expr ">=" add_expr
rule 48 add_expr: mult_expr
rule 49 add_expr: add_expr "+" mult_expr
rule 50 add_expr: add_expr "-" mult_expr
rule 51 mult_expr: unary_expr
rule 52 mult_expr: mult_expr "*" unary_expr
rule 53 mult_expr: mult_expr "/" unary_expr
rule 54 unary_expr: postfix_expr
rule 55 unary_expr: "-" unary_expr
rule 56 postfix_expr: primary_expr
rule 57 postfix_expr: IDENTIFIER "(" argument_expression_list ")"
rule 58 primary_expr: IDENTIFIER
rule 59 primary_expr: CONSTANT
rule 60 primary_expr: "(" expression ")"
rule 61 argument_expression_list: assign_expr
rule 62 argument_expression_list: argument_expression_list "," assign_expr
rule 63 argument_expression_list: 

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (28)
    on right: 
    on left : 
  program (29)
    on right: 2
    on left : 1 2
  external_declaration (30)
    on right: 1 2
    on left : 3 4
  declaration (31)
    on right: 3 26 27
    on left : 5
  function_definition (32)
    on right: 4
    on left : 11
  declarator_list (33)
    on right: 5 7
    on left : 6 7
  declarator (34)
    on right: 6 7 11 15
    on left : 8
  parameter_type_list (35)
    on right: 11 13
    on left : 12 13 14
  compound_statement (36)
    on right: 11 18
    on left : 25
  @1 (37)
    on right: 11
    on left : 9
  @2 (38)
    on right: 11
    on left : 10
  parameter_declaration (39)
    on right: 12 13
    on left : 15
  statement (40)
    on right: 19 20 21 29 30
    on left : 16 17 18 19 20 21 22
  expression (41)
    on right: 17 19 20 21 22 33 60
    on left : 32 33
  declaration_list (42)
    on right: 25 27
    on left : 26 27 28
  statement_list (43)
    on right: 25 30
    on left : 29 30 31
  @3 (44)
    on right: 25
    on left : 23
  @4 (45)
    on right: 25
    on left : 24
  assign_expr (46)
    on right: 32 33 35 61 62
    on left : 34 35
  logical_or_expr (47)
    on right: 34 37
    on left : 36 37
  logical_and_expr (48)
    on right: 36 37 39
    on left : 38 39
  equality_expr (49)
    on right: 38 39 41 42
    on left : 40 41 42
  relational_expr (50)
    on right: 40 41 42 44 45 46 47
    on left : 43 44 45 46 47
  add_expr (51)
    on right: 43 44 45 46 47 49 50
    on left : 48 49 50
  mult_expr (52)
    on right: 48 49 50 52 53
    on left : 51 52 53
  unary_expr (53)
    on right: 51 52 53 55
    on left : 54 55
  postfix_expr (54)
    on right: 54
    on left : 56 57
  primary_expr (55)
    on right: 56
    on left : 58 59 60
  argument_expression_list (56)
    on right: 57 62
    on left : 61 62 63

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  ")" (2) 11 19 20 21 57 60
  "}" (3) 25
  "(" (4) 11 19 20 21 57 60
  "{" (5) 25
  RESERVED (6) 5 11 15
  ";" (7) 5 16 17 22
  "," (8) 7 13 33 62
  IDENTIFIER (9) 8 35 57 58
  "if" (10) 19 20
  "else" (11) 20
  "while" (12) 21
  "return" (13) 22
  "=" (14) 35
  "||" (15) 37
  "&&" (16) 39
  "==" (17) 41
  "!=" (18) 42
  "<" (19) 44
  ">" (20) 45
  "<=" (21) 46
  ">=" (22) 47
  "+" (23) 49
  "-" (24) 50 55
  "*" (25) 52
  "/" (26) 53
  CONSTANT (27) 59

--------- State ---------

state 0


  RESERVED      shift, and go to state 5

  program       go to state 1
  external_declaration  go to state 2
  declaration   go to state 3
  function_definition  go to state 4

state 1

   2) program : program _ external_declaration

  $end          shift, and go to state 6
  RESERVED      shift, and go to state 5

  external_declaration  go to state 7
  declaration   go to state 3
  function_definition  go to state 4

state 2

   1) program : external_declaration _

  $default      reduce using rule 1 (program)


state 3

   3) external_declaration : declaration _

  $default      reduce using rule 3 (external_declaration)


state 4

   4) external_declaration : function_definition _

  $default      reduce using rule 4 (external_declaration)


state 5

   5) declaration : RESERVED _ declarator_list ";"
  11) function_definition : RESERVED _ declarator "(" @1 parameter_type_list ")" compound_statement @2

  IDENTIFIER    shift, and go to state 10

  declarator_list  go to state 8
  declarator    go to state 9

state 6


  $end          shift, and go to state 11


state 7

   2) program : program external_declaration _

  $default      reduce using rule 2 (program)


state 8

   5) declaration : RESERVED declarator_list _ ";"
   7) declarator_list : declarator_list _ "," declarator

  ";"           shift, and go to state 12
  ","           shift, and go to state 13


state 9

   6) declarator_list : declarator _
  11) function_definition : RESERVED declarator _ "(" @1 parameter_type_list ")" compound_statement @2

  "("           shift, and go to state 14
  $default      reduce using rule 6 (declarator_list)


state 10

   8) declarator : IDENTIFIER _

  $default      reduce using rule 8 (declarator)


state 11


  $default      accept


state 12

   5) declaration : RESERVED declarator_list ";" _

  $default      reduce using rule 5 (declaration)


state 13

   7) declarator_list : declarator_list "," _ declarator

  IDENTIFIER    shift, and go to state 10

  declarator    go to state 15

state 14

  11) function_definition : RESERVED declarator "(" _ @1 parameter_type_list ")" compound_statement @2

  $default      reduce using rule 9 (@1)

  @1            go to state 16

state 15

   7) declarator_list : declarator_list "," declarator _

  $default      reduce using rule 7 (declarator_list)


state 16

  11) function_definition : RESERVED declarator "(" @1 _ parameter_type_list ")" compound_statement @2

  RESERVED      shift, and go to state 19
  $default      reduce using rule 14 (parameter_type_list)

  parameter_type_list  go to state 17
  parameter_declaration  go to state 18

state 17

  11) function_definition : RESERVED declarator "(" @1 parameter_type_list _ ")" compound_statement @2
  13) parameter_type_list : parameter_type_list _ "," parameter_declaration

  ")"           shift, and go to state 20
  ","           shift, and go to state 21


state 18

  12) parameter_type_list : parameter_declaration _

  $default      reduce using rule 12 (parameter_type_list)


state 19

  15) parameter_declaration : RESERVED _ declarator

  IDENTIFIER    shift, and go to state 10

  declarator    go to state 22

state 20

  11) function_definition : RESERVED declarator "(" @1 parameter_type_list ")" _ compound_statement @2

  "{"           shift, and go to state 24

  compound_statement  go to state 23

state 21

  13) parameter_type_list : parameter_type_list "," _ parameter_declaration

  RESERVED      shift, and go to state 19

  parameter_declaration  go to state 25

state 22

  15) parameter_declaration : RESERVED declarator _

  $default      reduce using rule 15 (parameter_declaration)


state 23

  11) function_definition : RESERVED declarator "(" @1 parameter_type_list ")" compound_statement _ @2

  $default      reduce using rule 10 (@2)

  @2            go to state 26

state 24

  25) compound_statement : "{" _ @3 declaration_list statement_list "}" @4

  $default      reduce using rule 23 (@3)

  @3            go to state 27

state 25

  13) parameter_type_list : parameter_type_list "," parameter_declaration _

  $default      reduce using rule 13 (parameter_type_list)


state 26

  11) function_definition : RESERVED declarator "(" @1 parameter_type_list ")" compound_statement @2 _

  $default      reduce using rule 11 (function_definition)


state 27

  25) compound_statement : "{" @3 _ declaration_list statement_list "}" @4

  RESERVED      shift, and go to state 28
  RESERVED      [reduce using rule 28 (declaration_list)]
  $default      reduce using rule 28 (declaration_list)

  declaration_list  go to state 29
  declaration   go to state 30

state 28

   5) declaration : RESERVED _ declarator_list ";"

  IDENTIFIER    shift, and go to state 10

  declarator_list  go to state 8
  declarator    go to state 31

state 29

  25) compound_statement : "{" @3 declaration_list _ statement_list "}" @4
  27) declaration_list : declaration_list _ declaration

  "("           shift, and go to state 54
  "("           [reduce using rule 31 (statement_list)]
  "{"           shift, and go to state 24
  "{"           [reduce using rule 31 (statement_list)]
  RESERVED      shift, and go to state 28
  ";"           shift, and go to state 32
  ";"           [reduce using rule 31 (statement_list)]
  IDENTIFIER    shift, and go to state 43
  IDENTIFIER    [reduce using rule 31 (statement_list)]
  "if"          shift, and go to state 35
  "if"          [reduce using rule 31 (statement_list)]
  "while"       shift, and go to state 36
  "while"       [reduce using rule 31 (statement_list)]
  "return"      shift, and go to state 37
  "return"      [reduce using rule 31 (statement_list)]
  "-"           shift, and go to state 51
  "-"           [reduce using rule 31 (statement_list)]
  CONSTANT      shift, and go to state 53
  CONSTANT      [reduce using rule 31 (statement_list)]
  $default      reduce using rule 31 (statement_list)

  expression    go to state 33
  compound_statement  go to state 34
  statement_list  go to state 38
  declaration   go to state 39
  statement     go to state 40
  assign_expr   go to state 41
  logical_or_expr  go to state 42
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 30

  26) declaration_list : declaration _

  $default      reduce using rule 26 (declaration_list)


state 31

   6) declarator_list : declarator _

  $default      reduce using rule 6 (declarator_list)


state 32

  16) statement : ";" _

  $default      reduce using rule 16 (statement)


state 33

  17) statement : expression _ ";"
  33) expression : expression _ "," assign_expr

  ";"           shift, and go to state 55
  ","           shift, and go to state 56


state 34

  18) statement : compound_statement _

  $default      reduce using rule 18 (statement)


state 35

  19) statement : "if" _ "(" expression ")" statement
  20) statement : "if" _ "(" expression ")" statement "else" statement

  "("           shift, and go to state 57


state 36

  21) statement : "while" _ "(" expression ")" statement

  "("           shift, and go to state 58


state 37

  22) statement : "return" _ expression ";"

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 43
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  expression    go to state 59
  assign_expr   go to state 41
  logical_or_expr  go to state 42
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 38

  25) compound_statement : "{" @3 declaration_list statement_list _ "}" @4
  30) statement_list : statement_list _ statement

  "}"           shift, and go to state 60
  "("           shift, and go to state 54
  "{"           shift, and go to state 24
  ";"           shift, and go to state 32
  IDENTIFIER    shift, and go to state 43
  "if"          shift, and go to state 35
  "while"       shift, and go to state 36
  "return"      shift, and go to state 37
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  expression    go to state 33
  compound_statement  go to state 34
  statement     go to state 61
  assign_expr   go to state 41
  logical_or_expr  go to state 42
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 39

  27) declaration_list : declaration_list declaration _

  $default      reduce using rule 27 (declaration_list)


state 40

  29) statement_list : statement _

  $default      reduce using rule 29 (statement_list)


state 41

  32) expression : assign_expr _

  $default      reduce using rule 32 (expression)


state 42

  34) assign_expr : logical_or_expr _
  37) logical_or_expr : logical_or_expr _ "||" logical_and_expr

  "||"          shift, and go to state 62
  $default      reduce using rule 34 (assign_expr)


state 43

  35) assign_expr : IDENTIFIER _ "=" assign_expr
  57) postfix_expr : IDENTIFIER _ "(" argument_expression_list ")"
  58) primary_expr : IDENTIFIER _

  "("           shift, and go to state 64
  "="           shift, and go to state 63
  $default      reduce using rule 58 (primary_expr)


state 44

  36) logical_or_expr : logical_and_expr _
  39) logical_and_expr : logical_and_expr _ "&&" equality_expr

  "&&"          shift, and go to state 65
  $default      reduce using rule 36 (logical_or_expr)


state 45

  38) logical_and_expr : equality_expr _
  41) equality_expr : equality_expr _ "==" relational_expr
  42) equality_expr : equality_expr _ "!=" relational_expr

  "=="          shift, and go to state 66
  "!="          shift, and go to state 67
  $default      reduce using rule 38 (logical_and_expr)


state 46

  40) equality_expr : relational_expr _
  44) relational_expr : relational_expr _ "<" add_expr
  45) relational_expr : relational_expr _ ">" add_expr
  46) relational_expr : relational_expr _ "<=" add_expr
  47) relational_expr : relational_expr _ ">=" add_expr

  "<"           shift, and go to state 68
  ">"           shift, and go to state 69
  "<="          shift, and go to state 70
  ">="          shift, and go to state 71
  $default      reduce using rule 40 (equality_expr)


state 47

  43) relational_expr : add_expr _
  49) add_expr : add_expr _ "+" mult_expr
  50) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 72
  "-"           shift, and go to state 73
  $default      reduce using rule 43 (relational_expr)


state 48

  48) add_expr : mult_expr _
  52) mult_expr : mult_expr _ "*" unary_expr
  53) mult_expr : mult_expr _ "/" unary_expr

  "*"           shift, and go to state 74
  "/"           shift, and go to state 75
  $default      reduce using rule 48 (add_expr)


state 49

  51) mult_expr : unary_expr _

  $default      reduce using rule 51 (mult_expr)


state 50

  54) unary_expr : postfix_expr _

  $default      reduce using rule 54 (unary_expr)


state 51

  55) unary_expr : "-" _ unary_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  postfix_expr  go to state 50
  unary_expr    go to state 76
  primary_expr  go to state 52

state 52

  56) postfix_expr : primary_expr _

  $default      reduce using rule 56 (postfix_expr)


state 53

  59) primary_expr : CONSTANT _

  $default      reduce using rule 59 (primary_expr)


state 54

  60) primary_expr : "(" _ expression ")"

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 43
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  assign_expr   go to state 41
  expression    go to state 78
  logical_or_expr  go to state 42
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 55

  17) statement : expression ";" _

  $default      reduce using rule 17 (statement)


state 56

  33) expression : expression "," _ assign_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 43
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  assign_expr   go to state 79
  logical_or_expr  go to state 42
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 57

  19) statement : "if" "(" _ expression ")" statement
  20) statement : "if" "(" _ expression ")" statement "else" statement

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 43
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  expression    go to state 80
  assign_expr   go to state 41
  logical_or_expr  go to state 42
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 58

  21) statement : "while" "(" _ expression ")" statement

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 43
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  expression    go to state 81
  assign_expr   go to state 41
  logical_or_expr  go to state 42
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 59

  22) statement : "return" expression _ ";"
  33) expression : expression _ "," assign_expr

  ";"           shift, and go to state 82
  ","           shift, and go to state 56


state 60

  25) compound_statement : "{" @3 declaration_list statement_list "}" _ @4

  $default      reduce using rule 24 (@4)

  @4            go to state 83

state 61

  30) statement_list : statement_list statement _

  $default      reduce using rule 30 (statement_list)


state 62

  37) logical_or_expr : logical_or_expr "||" _ logical_and_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  logical_and_expr  go to state 84
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 63

  35) assign_expr : IDENTIFIER "=" _ assign_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 43
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  logical_or_expr  go to state 42
  assign_expr   go to state 85
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 64

  57) postfix_expr : IDENTIFIER "(" _ argument_expression_list ")"

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 43
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53
  $default      reduce using rule 63 (argument_expression_list)

  logical_or_expr  go to state 42
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52
  argument_expression_list  go to state 86
  assign_expr   go to state 87

state 65

  39) logical_and_expr : logical_and_expr "&&" _ equality_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  equality_expr  go to state 88
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 66

  41) equality_expr : equality_expr "==" _ relational_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  relational_expr  go to state 89
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 67

  42) equality_expr : equality_expr "!=" _ relational_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  relational_expr  go to state 90
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 68

  44) relational_expr : relational_expr "<" _ add_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  add_expr      go to state 91
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 69

  45) relational_expr : relational_expr ">" _ add_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  add_expr      go to state 92
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 70

  46) relational_expr : relational_expr "<=" _ add_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  add_expr      go to state 93
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 71

  47) relational_expr : relational_expr ">=" _ add_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  add_expr      go to state 94
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 72

  49) add_expr : add_expr "+" _ mult_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  mult_expr     go to state 95
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 73

  50) add_expr : add_expr "-" _ mult_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  mult_expr     go to state 96
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 74

  52) mult_expr : mult_expr "*" _ unary_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  unary_expr    go to state 97
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 75

  53) mult_expr : mult_expr "/" _ unary_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 77
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  unary_expr    go to state 98
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 76

  55) unary_expr : "-" unary_expr _

  $default      reduce using rule 55 (unary_expr)


state 77

  57) postfix_expr : IDENTIFIER _ "(" argument_expression_list ")"
  58) primary_expr : IDENTIFIER _

  "("           shift, and go to state 64
  $default      reduce using rule 58 (primary_expr)


state 78

  33) expression : expression _ "," assign_expr
  60) primary_expr : "(" expression _ ")"

  ")"           shift, and go to state 99
  ","           shift, and go to state 56


state 79

  33) expression : expression "," assign_expr _

  $default      reduce using rule 33 (expression)


state 80

  19) statement : "if" "(" expression _ ")" statement
  20) statement : "if" "(" expression _ ")" statement "else" statement
  33) expression : expression _ "," assign_expr

  ")"           shift, and go to state 100
  ","           shift, and go to state 56


state 81

  21) statement : "while" "(" expression _ ")" statement
  33) expression : expression _ "," assign_expr

  ")"           shift, and go to state 101
  ","           shift, and go to state 56


state 82

  22) statement : "return" expression ";" _

  $default      reduce using rule 22 (statement)


state 83

  25) compound_statement : "{" @3 declaration_list statement_list "}" @4 _

  $default      reduce using rule 25 (compound_statement)


state 84

  37) logical_or_expr : logical_or_expr "||" logical_and_expr _
  39) logical_and_expr : logical_and_expr _ "&&" equality_expr

  "&&"          shift, and go to state 65
  $default      reduce using rule 37 (logical_or_expr)


state 85

  35) assign_expr : IDENTIFIER "=" assign_expr _

  $default      reduce using rule 35 (assign_expr)


state 86

  57) postfix_expr : IDENTIFIER "(" argument_expression_list _ ")"
  62) argument_expression_list : argument_expression_list _ "," assign_expr

  ")"           shift, and go to state 102
  ","           shift, and go to state 103


state 87

  61) argument_expression_list : assign_expr _

  $default      reduce using rule 61 (argument_expression_list)


state 88

  39) logical_and_expr : logical_and_expr "&&" equality_expr _
  41) equality_expr : equality_expr _ "==" relational_expr
  42) equality_expr : equality_expr _ "!=" relational_expr

  "=="          shift, and go to state 66
  "!="          shift, and go to state 67
  $default      reduce using rule 39 (logical_and_expr)


state 89

  41) equality_expr : equality_expr "==" relational_expr _
  44) relational_expr : relational_expr _ "<" add_expr
  45) relational_expr : relational_expr _ ">" add_expr
  46) relational_expr : relational_expr _ "<=" add_expr
  47) relational_expr : relational_expr _ ">=" add_expr

  "<"           shift, and go to state 68
  ">"           shift, and go to state 69
  "<="          shift, and go to state 70
  ">="          shift, and go to state 71
  $default      reduce using rule 41 (equality_expr)


state 90

  42) equality_expr : equality_expr "!=" relational_expr _
  44) relational_expr : relational_expr _ "<" add_expr
  45) relational_expr : relational_expr _ ">" add_expr
  46) relational_expr : relational_expr _ "<=" add_expr
  47) relational_expr : relational_expr _ ">=" add_expr

  "<"           shift, and go to state 68
  ">"           shift, and go to state 69
  "<="          shift, and go to state 70
  ">="          shift, and go to state 71
  $default      reduce using rule 42 (equality_expr)


state 91

  44) relational_expr : relational_expr "<" add_expr _
  49) add_expr : add_expr _ "+" mult_expr
  50) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 72
  "-"           shift, and go to state 73
  $default      reduce using rule 44 (relational_expr)


state 92

  45) relational_expr : relational_expr ">" add_expr _
  49) add_expr : add_expr _ "+" mult_expr
  50) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 72
  "-"           shift, and go to state 73
  $default      reduce using rule 45 (relational_expr)


state 93

  46) relational_expr : relational_expr "<=" add_expr _
  49) add_expr : add_expr _ "+" mult_expr
  50) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 72
  "-"           shift, and go to state 73
  $default      reduce using rule 46 (relational_expr)


state 94

  47) relational_expr : relational_expr ">=" add_expr _
  49) add_expr : add_expr _ "+" mult_expr
  50) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 72
  "-"           shift, and go to state 73
  $default      reduce using rule 47 (relational_expr)


state 95

  49) add_expr : add_expr "+" mult_expr _
  52) mult_expr : mult_expr _ "*" unary_expr
  53) mult_expr : mult_expr _ "/" unary_expr

  "*"           shift, and go to state 74
  "/"           shift, and go to state 75
  $default      reduce using rule 49 (add_expr)


state 96

  50) add_expr : add_expr "-" mult_expr _
  52) mult_expr : mult_expr _ "*" unary_expr
  53) mult_expr : mult_expr _ "/" unary_expr

  "*"           shift, and go to state 74
  "/"           shift, and go to state 75
  $default      reduce using rule 50 (add_expr)


state 97

  52) mult_expr : mult_expr "*" unary_expr _

  $default      reduce using rule 52 (mult_expr)


state 98

  53) mult_expr : mult_expr "/" unary_expr _

  $default      reduce using rule 53 (mult_expr)


state 99

  60) primary_expr : "(" expression ")" _

  $default      reduce using rule 60 (primary_expr)


state 100

  19) statement : "if" "(" expression ")" _ statement
  20) statement : "if" "(" expression ")" _ statement "else" statement

  "("           shift, and go to state 54
  "{"           shift, and go to state 24
  ";"           shift, and go to state 32
  IDENTIFIER    shift, and go to state 43
  "if"          shift, and go to state 35
  "while"       shift, and go to state 36
  "return"      shift, and go to state 37
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  expression    go to state 33
  compound_statement  go to state 34
  statement     go to state 104
  assign_expr   go to state 41
  logical_or_expr  go to state 42
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 101

  21) statement : "while" "(" expression ")" _ statement

  "("           shift, and go to state 54
  "{"           shift, and go to state 24
  ";"           shift, and go to state 32
  IDENTIFIER    shift, and go to state 43
  "if"          shift, and go to state 35
  "while"       shift, and go to state 36
  "return"      shift, and go to state 37
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  expression    go to state 33
  compound_statement  go to state 34
  statement     go to state 105
  assign_expr   go to state 41
  logical_or_expr  go to state 42
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 102

  57) postfix_expr : IDENTIFIER "(" argument_expression_list ")" _

  $default      reduce using rule 57 (postfix_expr)


state 103

  62) argument_expression_list : argument_expression_list "," _ assign_expr

  "("           shift, and go to state 54
  IDENTIFIER    shift, and go to state 43
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  logical_or_expr  go to state 42
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52
  assign_expr   go to state 106

state 104

  19) statement : "if" "(" expression ")" statement _
  20) statement : "if" "(" expression ")" statement _ "else" statement

  "else"        shift, and go to state 107
  "else"        [reduce using rule 19 (statement)]
  $default      reduce using rule 19 (statement)


state 105

  21) statement : "while" "(" expression ")" statement _

  $default      reduce using rule 21 (statement)


state 106

  62) argument_expression_list : argument_expression_list "," assign_expr _

  $default      reduce using rule 62 (argument_expression_list)


state 107

  20) statement : "if" "(" expression ")" statement "else" _ statement

  "("           shift, and go to state 54
  "{"           shift, and go to state 24
  ";"           shift, and go to state 32
  IDENTIFIER    shift, and go to state 43
  "if"          shift, and go to state 35
  "while"       shift, and go to state 36
  "return"      shift, and go to state 37
  "-"           shift, and go to state 51
  CONSTANT      shift, and go to state 53

  expression    go to state 33
  compound_statement  go to state 34
  statement     go to state 108
  assign_expr   go to state 41
  logical_or_expr  go to state 42
  logical_and_expr  go to state 44
  equality_expr  go to state 45
  relational_expr  go to state 46
  add_expr      go to state 47
  mult_expr     go to state 48
  unary_expr    go to state 49
  postfix_expr  go to state 50
  primary_expr  go to state 52

state 108

  20) statement : "if" "(" expression ")" statement "else" statement _

  $default      reduce using rule 20 (statement)

