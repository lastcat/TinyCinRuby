state 22 contains 1 shift/reduce conflicts
state 25 contains 9 shift/reduce conflicts
state 99 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 program: external_declaration
rule 2 program: program external_declaration
rule 3 external_declaration: declaration
rule 4 external_declaration: function_definition
rule 5 declaration: RESERVED declarator_list
rule 6 declarator_list: declarator
rule 7 declarator_list: declarator_list "," declarator
rule 8 declarator: IDENTIFIER
rule 9 function_definition: RESERVED declarator "(" parameter_type_list ")" compound_statement
rule 10 parameter_type_list: parameter_declaration
rule 11 parameter_type_list: parameter_type_list "," parameter_declaraion
rule 12 parameter_type_list: 
rule 13 parameter_declaration: RESERVED declarator
rule 14 statement: ";"
rule 15 statement: expression ";"
rule 16 statement: compound_statement
rule 17 statement: "if" "(" expression ")" statement
rule 18 statement: "if" "(" expression ")" statement "else" statement
rule 19 statement: "while" "(" expression ")" statement
rule 20 statement: "return" expression ";"
rule 21 compound_statement: "{" declaration_list statement_list "}"
rule 22 declaration_list: declaration
rule 23 declaration_list: declaration_list declaration
rule 24 declaration_list: 
rule 25 statement_list: statement
rule 26 statement_list: statement_list statement
rule 27 statement_list: 
rule 28 expression: assign_expr
rule 29 expression: expression "," assign_expr
rule 30 assign_expr: logical_or_expr
rule 31 assign_expr: IDENTIFIER "=" assign_expr
rule 32 logical_or_expr: logical_and_expr
rule 33 logical_or_expr: logical_or_expr "||" logical_and_expr
rule 34 logical_and_expr: equality_expr
rule 35 logical_and_expr: logical_and_expr "&&" equality_expr
rule 36 equality_expr: relational_expr
rule 37 equality_expr: equality_expr "==" relational_expr
rule 38 equality_expr: equality_expr "!=" relational_expr
rule 39 relational_expr: add_expr
rule 40 relational_expr: relational_expr "<" add_expr
rule 41 relational_expr: relational_expr ">" add_expr
rule 42 relational_expr: relational_expr "<=" add_expr
rule 43 relational_expr: relational_expr ">=" add_expr
rule 44 add_expr: mult_expr
rule 45 add_expr: add_expr "+" mult_expr
rule 46 add_expr: add_expr "-" mult_expr
rule 47 mult_expr: unary_expr
rule 48 mult_expr: mult_expr "*" unary_expr
rule 49 mult_expr: mult_expr "/" unary_expr
rule 50 unary_expr: postfix_expr
rule 51 unary_expr: "-" unary_expr
rule 52 postfix_expr: primary_expr
rule 53 postfix_expr: IDENTIFIER "(" argument_expression_list ")"
rule 54 primary_expr: IDENTIFIER
rule 55 primary_expr: CONSTANT
rule 56 primary_expr: "(" expression ")"
rule 57 argument_expression_list: assign_expr
rule 58 argument_expression_list: argument_expression_list "," assign_expr
rule 59 argument_expression_list: 

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (29)
    on right: 
    on left : 
  program (30)
    on right: 2
    on left : 1 2
  external_declaration (31)
    on right: 1 2
    on left : 3 4
  declaration (32)
    on right: 3 22 23
    on left : 5
  function_definition (33)
    on right: 4
    on left : 9
  declarator_list (34)
    on right: 5 7
    on left : 6 7
  declarator (35)
    on right: 6 7 9 13
    on left : 8
  parameter_type_list (36)
    on right: 9 11
    on left : 10 11 12
  compound_statement (37)
    on right: 9 16
    on left : 21
  parameter_declaration (38)
    on right: 10
    on left : 13
  statement (39)
    on right: 17 18 19 25 26
    on left : 14 15 16 17 18 19 20
  expression (40)
    on right: 15 17 18 19 20 29 56
    on left : 28 29
  declaration_list (41)
    on right: 21 23
    on left : 22 23 24
  statement_list (42)
    on right: 21 26
    on left : 25 26 27
  assign_expr (43)
    on right: 28 29 31 57 58
    on left : 30 31
  logical_or_expr (44)
    on right: 30 33
    on left : 32 33
  logical_and_expr (45)
    on right: 32 33 35
    on left : 34 35
  equality_expr (46)
    on right: 34 35 37 38
    on left : 36 37 38
  relational_expr (47)
    on right: 36 37 38 40 41 42 43
    on left : 39 40 41 42 43
  add_expr (48)
    on right: 39 40 41 42 43 45 46
    on left : 44 45 46
  mult_expr (49)
    on right: 44 45 46 48 49
    on left : 47 48 49
  unary_expr (50)
    on right: 47 48 49 51
    on left : 50 51
  postfix_expr (51)
    on right: 50
    on left : 52 53
  primary_expr (52)
    on right: 52
    on left : 54 55 56
  argument_expression_list (53)
    on right: 53 58
    on left : 57 58 59

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  RESERVED (2) 5 9 13
  "," (3) 7 11 29 58
  IDENTIFIER (4) 8 31 53 54
  "(" (5) 9 17 18 19 53 56
  ")" (6) 9 17 18 19 53 56
  parameter_declaraion (7) 11
  ";" (8) 14 15 20
  "if" (9) 17 18
  "else" (10) 18
  "while" (11) 19
  "return" (12) 20
  "{" (13) 21
  "}" (14) 21
  "=" (15) 31
  "||" (16) 33
  "&&" (17) 35
  "==" (18) 37
  "!=" (19) 38
  "<" (20) 40
  ">" (21) 41
  "<=" (22) 42
  ">=" (23) 43
  "+" (24) 45
  "-" (25) 46 51
  "*" (26) 48
  "/" (27) 49
  CONSTANT (28) 55

--------- State ---------

state 0


  RESERVED      shift, and go to state 5

  program       go to state 1
  external_declaration  go to state 2
  declaration   go to state 3
  function_definition  go to state 4

state 1

   2) program : program _ external_declaration

  $end          shift, and go to state 6
  RESERVED      shift, and go to state 5

  external_declaration  go to state 7
  declaration   go to state 3
  function_definition  go to state 4

state 2

   1) program : external_declaration _

  $default      reduce using rule 1 (program)


state 3

   3) external_declaration : declaration _

  $default      reduce using rule 3 (external_declaration)


state 4

   4) external_declaration : function_definition _

  $default      reduce using rule 4 (external_declaration)


state 5

   5) declaration : RESERVED _ declarator_list
   9) function_definition : RESERVED _ declarator "(" parameter_type_list ")" compound_statement

  IDENTIFIER    shift, and go to state 10

  declarator_list  go to state 8
  declarator    go to state 9

state 6


  $end          shift, and go to state 11


state 7

   2) program : program external_declaration _

  $default      reduce using rule 2 (program)


state 8

   5) declaration : RESERVED declarator_list _
   7) declarator_list : declarator_list _ "," declarator

  ","           shift, and go to state 12
  $default      reduce using rule 5 (declaration)


state 9

   6) declarator_list : declarator _
   9) function_definition : RESERVED declarator _ "(" parameter_type_list ")" compound_statement

  "("           shift, and go to state 13
  $default      reduce using rule 6 (declarator_list)


state 10

   8) declarator : IDENTIFIER _

  $default      reduce using rule 8 (declarator)


state 11


  $default      accept


state 12

   7) declarator_list : declarator_list "," _ declarator

  IDENTIFIER    shift, and go to state 10

  declarator    go to state 14

state 13

   9) function_definition : RESERVED declarator "(" _ parameter_type_list ")" compound_statement

  RESERVED      shift, and go to state 17
  $default      reduce using rule 12 (parameter_type_list)

  parameter_type_list  go to state 15
  parameter_declaration  go to state 16

state 14

   7) declarator_list : declarator_list "," declarator _

  $default      reduce using rule 7 (declarator_list)


state 15

   9) function_definition : RESERVED declarator "(" parameter_type_list _ ")" compound_statement
  11) parameter_type_list : parameter_type_list _ "," parameter_declaraion

  ","           shift, and go to state 19
  ")"           shift, and go to state 18


state 16

  10) parameter_type_list : parameter_declaration _

  $default      reduce using rule 10 (parameter_type_list)


state 17

  13) parameter_declaration : RESERVED _ declarator

  IDENTIFIER    shift, and go to state 10

  declarator    go to state 20

state 18

   9) function_definition : RESERVED declarator "(" parameter_type_list ")" _ compound_statement

  "{"           shift, and go to state 22

  compound_statement  go to state 21

state 19

  11) parameter_type_list : parameter_type_list "," _ parameter_declaraion

  parameter_declaraion  shift, and go to state 23


state 20

  13) parameter_declaration : RESERVED declarator _

  $default      reduce using rule 13 (parameter_declaration)


state 21

   9) function_definition : RESERVED declarator "(" parameter_type_list ")" compound_statement _

  $default      reduce using rule 9 (function_definition)


state 22

  21) compound_statement : "{" _ declaration_list statement_list "}"

  RESERVED      shift, and go to state 24
  RESERVED      [reduce using rule 24 (declaration_list)]
  $default      reduce using rule 24 (declaration_list)

  declaration_list  go to state 25
  declaration   go to state 26

state 23

  11) parameter_type_list : parameter_type_list "," parameter_declaraion _

  $default      reduce using rule 11 (parameter_type_list)


state 24

   5) declaration : RESERVED _ declarator_list

  IDENTIFIER    shift, and go to state 10

  declarator_list  go to state 8
  declarator    go to state 27

state 25

  21) compound_statement : "{" declaration_list _ statement_list "}"
  23) declaration_list : declaration_list _ declaration

  RESERVED      shift, and go to state 24
  IDENTIFIER    shift, and go to state 39
  IDENTIFIER    [reduce using rule 27 (statement_list)]
  "("           shift, and go to state 50
  "("           [reduce using rule 27 (statement_list)]
  ";"           shift, and go to state 28
  ";"           [reduce using rule 27 (statement_list)]
  "if"          shift, and go to state 31
  "if"          [reduce using rule 27 (statement_list)]
  "while"       shift, and go to state 32
  "while"       [reduce using rule 27 (statement_list)]
  "return"      shift, and go to state 33
  "return"      [reduce using rule 27 (statement_list)]
  "{"           shift, and go to state 22
  "{"           [reduce using rule 27 (statement_list)]
  "-"           shift, and go to state 47
  "-"           [reduce using rule 27 (statement_list)]
  CONSTANT      shift, and go to state 49
  CONSTANT      [reduce using rule 27 (statement_list)]
  $default      reduce using rule 27 (statement_list)

  expression    go to state 29
  compound_statement  go to state 30
  statement_list  go to state 34
  declaration   go to state 35
  statement     go to state 36
  assign_expr   go to state 37
  logical_or_expr  go to state 38
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 26

  22) declaration_list : declaration _

  $default      reduce using rule 22 (declaration_list)


state 27

   6) declarator_list : declarator _

  $default      reduce using rule 6 (declarator_list)


state 28

  14) statement : ";" _

  $default      reduce using rule 14 (statement)


state 29

  15) statement : expression _ ";"
  29) expression : expression _ "," assign_expr

  ","           shift, and go to state 52
  ";"           shift, and go to state 51


state 30

  16) statement : compound_statement _

  $default      reduce using rule 16 (statement)


state 31

  17) statement : "if" _ "(" expression ")" statement
  18) statement : "if" _ "(" expression ")" statement "else" statement

  "("           shift, and go to state 53


state 32

  19) statement : "while" _ "(" expression ")" statement

  "("           shift, and go to state 54


state 33

  20) statement : "return" _ expression ";"

  IDENTIFIER    shift, and go to state 39
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  expression    go to state 55
  assign_expr   go to state 37
  logical_or_expr  go to state 38
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 34

  21) compound_statement : "{" declaration_list statement_list _ "}"
  26) statement_list : statement_list _ statement

  IDENTIFIER    shift, and go to state 39
  "("           shift, and go to state 50
  ";"           shift, and go to state 28
  "if"          shift, and go to state 31
  "while"       shift, and go to state 32
  "return"      shift, and go to state 33
  "{"           shift, and go to state 22
  "}"           shift, and go to state 56
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  expression    go to state 29
  compound_statement  go to state 30
  statement     go to state 57
  assign_expr   go to state 37
  logical_or_expr  go to state 38
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 35

  23) declaration_list : declaration_list declaration _

  $default      reduce using rule 23 (declaration_list)


state 36

  25) statement_list : statement _

  $default      reduce using rule 25 (statement_list)


state 37

  28) expression : assign_expr _

  $default      reduce using rule 28 (expression)


state 38

  30) assign_expr : logical_or_expr _
  33) logical_or_expr : logical_or_expr _ "||" logical_and_expr

  "||"          shift, and go to state 58
  $default      reduce using rule 30 (assign_expr)


state 39

  31) assign_expr : IDENTIFIER _ "=" assign_expr
  53) postfix_expr : IDENTIFIER _ "(" argument_expression_list ")"
  54) primary_expr : IDENTIFIER _

  "("           shift, and go to state 60
  "="           shift, and go to state 59
  $default      reduce using rule 54 (primary_expr)


state 40

  32) logical_or_expr : logical_and_expr _
  35) logical_and_expr : logical_and_expr _ "&&" equality_expr

  "&&"          shift, and go to state 61
  $default      reduce using rule 32 (logical_or_expr)


state 41

  34) logical_and_expr : equality_expr _
  37) equality_expr : equality_expr _ "==" relational_expr
  38) equality_expr : equality_expr _ "!=" relational_expr

  "=="          shift, and go to state 62
  "!="          shift, and go to state 63
  $default      reduce using rule 34 (logical_and_expr)


state 42

  36) equality_expr : relational_expr _
  40) relational_expr : relational_expr _ "<" add_expr
  41) relational_expr : relational_expr _ ">" add_expr
  42) relational_expr : relational_expr _ "<=" add_expr
  43) relational_expr : relational_expr _ ">=" add_expr

  "<"           shift, and go to state 64
  ">"           shift, and go to state 65
  "<="          shift, and go to state 66
  ">="          shift, and go to state 67
  $default      reduce using rule 36 (equality_expr)


state 43

  39) relational_expr : add_expr _
  45) add_expr : add_expr _ "+" mult_expr
  46) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 68
  "-"           shift, and go to state 69
  $default      reduce using rule 39 (relational_expr)


state 44

  44) add_expr : mult_expr _
  48) mult_expr : mult_expr _ "*" unary_expr
  49) mult_expr : mult_expr _ "/" unary_expr

  "*"           shift, and go to state 70
  "/"           shift, and go to state 71
  $default      reduce using rule 44 (add_expr)


state 45

  47) mult_expr : unary_expr _

  $default      reduce using rule 47 (mult_expr)


state 46

  50) unary_expr : postfix_expr _

  $default      reduce using rule 50 (unary_expr)


state 47

  51) unary_expr : "-" _ unary_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  postfix_expr  go to state 46
  unary_expr    go to state 72
  primary_expr  go to state 48

state 48

  52) postfix_expr : primary_expr _

  $default      reduce using rule 52 (postfix_expr)


state 49

  55) primary_expr : CONSTANT _

  $default      reduce using rule 55 (primary_expr)


state 50

  56) primary_expr : "(" _ expression ")"

  IDENTIFIER    shift, and go to state 39
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  assign_expr   go to state 37
  expression    go to state 74
  logical_or_expr  go to state 38
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 51

  15) statement : expression ";" _

  $default      reduce using rule 15 (statement)


state 52

  29) expression : expression "," _ assign_expr

  IDENTIFIER    shift, and go to state 39
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  assign_expr   go to state 75
  logical_or_expr  go to state 38
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 53

  17) statement : "if" "(" _ expression ")" statement
  18) statement : "if" "(" _ expression ")" statement "else" statement

  IDENTIFIER    shift, and go to state 39
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  expression    go to state 76
  assign_expr   go to state 37
  logical_or_expr  go to state 38
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 54

  19) statement : "while" "(" _ expression ")" statement

  IDENTIFIER    shift, and go to state 39
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  expression    go to state 77
  assign_expr   go to state 37
  logical_or_expr  go to state 38
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 55

  20) statement : "return" expression _ ";"
  29) expression : expression _ "," assign_expr

  ","           shift, and go to state 52
  ";"           shift, and go to state 78


state 56

  21) compound_statement : "{" declaration_list statement_list "}" _

  $default      reduce using rule 21 (compound_statement)


state 57

  26) statement_list : statement_list statement _

  $default      reduce using rule 26 (statement_list)


state 58

  33) logical_or_expr : logical_or_expr "||" _ logical_and_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  logical_and_expr  go to state 79
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 59

  31) assign_expr : IDENTIFIER "=" _ assign_expr

  IDENTIFIER    shift, and go to state 39
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  logical_or_expr  go to state 38
  assign_expr   go to state 80
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 60

  53) postfix_expr : IDENTIFIER "(" _ argument_expression_list ")"

  IDENTIFIER    shift, and go to state 39
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49
  $default      reduce using rule 59 (argument_expression_list)

  logical_or_expr  go to state 38
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48
  argument_expression_list  go to state 81
  assign_expr   go to state 82

state 61

  35) logical_and_expr : logical_and_expr "&&" _ equality_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  equality_expr  go to state 83
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 62

  37) equality_expr : equality_expr "==" _ relational_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  relational_expr  go to state 84
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 63

  38) equality_expr : equality_expr "!=" _ relational_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  relational_expr  go to state 85
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 64

  40) relational_expr : relational_expr "<" _ add_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  add_expr      go to state 86
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 65

  41) relational_expr : relational_expr ">" _ add_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  add_expr      go to state 87
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 66

  42) relational_expr : relational_expr "<=" _ add_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  add_expr      go to state 88
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 67

  43) relational_expr : relational_expr ">=" _ add_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  add_expr      go to state 89
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 68

  45) add_expr : add_expr "+" _ mult_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  mult_expr     go to state 90
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 69

  46) add_expr : add_expr "-" _ mult_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  mult_expr     go to state 91
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 70

  48) mult_expr : mult_expr "*" _ unary_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  unary_expr    go to state 92
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 71

  49) mult_expr : mult_expr "/" _ unary_expr

  IDENTIFIER    shift, and go to state 73
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  unary_expr    go to state 93
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 72

  51) unary_expr : "-" unary_expr _

  $default      reduce using rule 51 (unary_expr)


state 73

  53) postfix_expr : IDENTIFIER _ "(" argument_expression_list ")"
  54) primary_expr : IDENTIFIER _

  "("           shift, and go to state 60
  $default      reduce using rule 54 (primary_expr)


state 74

  29) expression : expression _ "," assign_expr
  56) primary_expr : "(" expression _ ")"

  ","           shift, and go to state 52
  ")"           shift, and go to state 94


state 75

  29) expression : expression "," assign_expr _

  $default      reduce using rule 29 (expression)


state 76

  17) statement : "if" "(" expression _ ")" statement
  18) statement : "if" "(" expression _ ")" statement "else" statement
  29) expression : expression _ "," assign_expr

  ","           shift, and go to state 52
  ")"           shift, and go to state 95


state 77

  19) statement : "while" "(" expression _ ")" statement
  29) expression : expression _ "," assign_expr

  ","           shift, and go to state 52
  ")"           shift, and go to state 96


state 78

  20) statement : "return" expression ";" _

  $default      reduce using rule 20 (statement)


state 79

  33) logical_or_expr : logical_or_expr "||" logical_and_expr _
  35) logical_and_expr : logical_and_expr _ "&&" equality_expr

  "&&"          shift, and go to state 61
  $default      reduce using rule 33 (logical_or_expr)


state 80

  31) assign_expr : IDENTIFIER "=" assign_expr _

  $default      reduce using rule 31 (assign_expr)


state 81

  53) postfix_expr : IDENTIFIER "(" argument_expression_list _ ")"
  58) argument_expression_list : argument_expression_list _ "," assign_expr

  ","           shift, and go to state 98
  ")"           shift, and go to state 97


state 82

  57) argument_expression_list : assign_expr _

  $default      reduce using rule 57 (argument_expression_list)


state 83

  35) logical_and_expr : logical_and_expr "&&" equality_expr _
  37) equality_expr : equality_expr _ "==" relational_expr
  38) equality_expr : equality_expr _ "!=" relational_expr

  "=="          shift, and go to state 62
  "!="          shift, and go to state 63
  $default      reduce using rule 35 (logical_and_expr)


state 84

  37) equality_expr : equality_expr "==" relational_expr _
  40) relational_expr : relational_expr _ "<" add_expr
  41) relational_expr : relational_expr _ ">" add_expr
  42) relational_expr : relational_expr _ "<=" add_expr
  43) relational_expr : relational_expr _ ">=" add_expr

  "<"           shift, and go to state 64
  ">"           shift, and go to state 65
  "<="          shift, and go to state 66
  ">="          shift, and go to state 67
  $default      reduce using rule 37 (equality_expr)


state 85

  38) equality_expr : equality_expr "!=" relational_expr _
  40) relational_expr : relational_expr _ "<" add_expr
  41) relational_expr : relational_expr _ ">" add_expr
  42) relational_expr : relational_expr _ "<=" add_expr
  43) relational_expr : relational_expr _ ">=" add_expr

  "<"           shift, and go to state 64
  ">"           shift, and go to state 65
  "<="          shift, and go to state 66
  ">="          shift, and go to state 67
  $default      reduce using rule 38 (equality_expr)


state 86

  40) relational_expr : relational_expr "<" add_expr _
  45) add_expr : add_expr _ "+" mult_expr
  46) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 68
  "-"           shift, and go to state 69
  $default      reduce using rule 40 (relational_expr)


state 87

  41) relational_expr : relational_expr ">" add_expr _
  45) add_expr : add_expr _ "+" mult_expr
  46) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 68
  "-"           shift, and go to state 69
  $default      reduce using rule 41 (relational_expr)


state 88

  42) relational_expr : relational_expr "<=" add_expr _
  45) add_expr : add_expr _ "+" mult_expr
  46) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 68
  "-"           shift, and go to state 69
  $default      reduce using rule 42 (relational_expr)


state 89

  43) relational_expr : relational_expr ">=" add_expr _
  45) add_expr : add_expr _ "+" mult_expr
  46) add_expr : add_expr _ "-" mult_expr

  "+"           shift, and go to state 68
  "-"           shift, and go to state 69
  $default      reduce using rule 43 (relational_expr)


state 90

  45) add_expr : add_expr "+" mult_expr _
  48) mult_expr : mult_expr _ "*" unary_expr
  49) mult_expr : mult_expr _ "/" unary_expr

  "*"           shift, and go to state 70
  "/"           shift, and go to state 71
  $default      reduce using rule 45 (add_expr)


state 91

  46) add_expr : add_expr "-" mult_expr _
  48) mult_expr : mult_expr _ "*" unary_expr
  49) mult_expr : mult_expr _ "/" unary_expr

  "*"           shift, and go to state 70
  "/"           shift, and go to state 71
  $default      reduce using rule 46 (add_expr)


state 92

  48) mult_expr : mult_expr "*" unary_expr _

  $default      reduce using rule 48 (mult_expr)


state 93

  49) mult_expr : mult_expr "/" unary_expr _

  $default      reduce using rule 49 (mult_expr)


state 94

  56) primary_expr : "(" expression ")" _

  $default      reduce using rule 56 (primary_expr)


state 95

  17) statement : "if" "(" expression ")" _ statement
  18) statement : "if" "(" expression ")" _ statement "else" statement

  IDENTIFIER    shift, and go to state 39
  "("           shift, and go to state 50
  ";"           shift, and go to state 28
  "if"          shift, and go to state 31
  "while"       shift, and go to state 32
  "return"      shift, and go to state 33
  "{"           shift, and go to state 22
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  expression    go to state 29
  compound_statement  go to state 30
  statement     go to state 99
  assign_expr   go to state 37
  logical_or_expr  go to state 38
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 96

  19) statement : "while" "(" expression ")" _ statement

  IDENTIFIER    shift, and go to state 39
  "("           shift, and go to state 50
  ";"           shift, and go to state 28
  "if"          shift, and go to state 31
  "while"       shift, and go to state 32
  "return"      shift, and go to state 33
  "{"           shift, and go to state 22
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  expression    go to state 29
  compound_statement  go to state 30
  statement     go to state 100
  assign_expr   go to state 37
  logical_or_expr  go to state 38
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 97

  53) postfix_expr : IDENTIFIER "(" argument_expression_list ")" _

  $default      reduce using rule 53 (postfix_expr)


state 98

  58) argument_expression_list : argument_expression_list "," _ assign_expr

  IDENTIFIER    shift, and go to state 39
  "("           shift, and go to state 50
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  logical_or_expr  go to state 38
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48
  assign_expr   go to state 101

state 99

  17) statement : "if" "(" expression ")" statement _
  18) statement : "if" "(" expression ")" statement _ "else" statement

  "else"        shift, and go to state 102
  "else"        [reduce using rule 17 (statement)]
  $default      reduce using rule 17 (statement)


state 100

  19) statement : "while" "(" expression ")" statement _

  $default      reduce using rule 19 (statement)


state 101

  58) argument_expression_list : argument_expression_list "," assign_expr _

  $default      reduce using rule 58 (argument_expression_list)


state 102

  18) statement : "if" "(" expression ")" statement "else" _ statement

  IDENTIFIER    shift, and go to state 39
  "("           shift, and go to state 50
  ";"           shift, and go to state 28
  "if"          shift, and go to state 31
  "while"       shift, and go to state 32
  "return"      shift, and go to state 33
  "{"           shift, and go to state 22
  "-"           shift, and go to state 47
  CONSTANT      shift, and go to state 49

  expression    go to state 29
  compound_statement  go to state 30
  statement     go to state 103
  assign_expr   go to state 37
  logical_or_expr  go to state 38
  logical_and_expr  go to state 40
  equality_expr  go to state 41
  relational_expr  go to state 42
  add_expr      go to state 43
  mult_expr     go to state 44
  unary_expr    go to state 45
  postfix_expr  go to state 46
  primary_expr  go to state 48

state 103

  18) statement : "if" "(" expression ")" statement "else" statement _

  $default      reduce using rule 18 (statement)

